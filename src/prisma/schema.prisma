generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               String          @id @default(uuid())
  email            String          @unique
  name             String?
  age              Int
  role             Role            @default(BASIC)
  userPreferenceId String?         @unique
  password         String
  writtenPosts     Post[]          @relation("WrittenPosts")
  favouritedPosts  Post[]          @relation("FavouritePosts")
  userPreference   UserPreference? @relation(fields: [userPreferenceId], references: [id])
  RefreshToken     RefreshToken[]

  @@unique([name, age])
  @@index([email])
}

model UserPreference {
  id           String  @id @default(uuid())
  emailUpdates Boolean
  user         User?
}

model Post {
  id             String     @id @default(uuid())
  title          String
  content        String?
  published      Boolean    @default(false)
  authorId       String
  averageRating  Float
  createdAt      DateTime   @default(now())
  favouritedById String?
  updatedAt      DateTime   @updatedAt
  author         User       @relation("WrittenPosts", fields: [authorId], references: [id])
  favoritedBy    User?      @relation("FavouritePosts", fields: [favouritedById], references: [id])
  categories     Category[] @relation("CategoryToPost")
}

model Category {
  id    String @id @default(uuid())
  name  String @unique
  posts Post[] @relation("CategoryToPost")
}

model RefreshToken {
  id        String   @id @default(uuid())
  user      User     @relation(fields: [userId], references: [id])
  clientId  String
  token     String   @unique
  expiresAt DateTime
  revoked   Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    String
}

enum Role {
  BASIC
  EDITOR
  ADMIN
}
